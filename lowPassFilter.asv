function [ image ] = lowPassFilter( image )
%FFT Summary of this function goes here
%   Detailed explanation goes here

    imageList{index}.fftImage = mat2gray(log(abs(imageList{index}.fftBeschteImage)));
    t = graythresh(imageList{index}.fftImage);
    imageList{index}.fftbwImage = im2bw(imageList{index}.fftImage,t);
    %i did this
    [imageList{index}.fftCircleImage, imageList{index}.fftRad, imageList{index}.fftCenter] = fastFourier(imageList{index}.fftbwImage);

    SE = strel('disk', 4, 8);
    image(floor(size(image, 1)/2) - 20 : floor(size(image, 1)/2) + 20, ...
    floor(size(image, 2)/2) - 20 : floor(size(image, 2)/2) + 20) = 1;
    image = imerode(image, SE);
    image = bwareafilt(image, 1, 'largest');
    image = imfill(image, 'holes');
    % delete the pixels in every row that has less than 75 white pixels
%     image(sum(image) < 75, :) = 0;
    for i = 1:size(image,1)
        if(sum(image(i,:)) < 75)
            image(i,:) = 0;
        end
    end
    
    SE = strel('disk', 80, 8);
    image = imdilate(image, SE); 
    cc = regionprops(image, 'Centroid', 'MajorAxisLength', 'MinorAxisLength');
    rad = (0.55 * cc.MajorAxisLength + 0.45 * cc.MinorAxisLength)/2;

    
    
    
    xcoord = (1:size(imageList{index}.fftCircleImage, 1)) - imageList{index}.fftCenter(1);
    ycoord = (1:size(imageList{index}.fftCircleImage, 2)) - imageList{index}.fftCenter(2);
    
    [x,y] = ndgrid(xcoord, ycoord);
    myZeros = zeros(size(imageList{index}.fftCircleImage));
    myZeros((x.^2 + y.^2 < (imageList{index}.fftRad)^2)) = 1;
    imageList{index}.fftBeschteImage = myZeros .* imageList{index}.fftBeschteImage;
    imageList{index}.fftBeschteImage = ifft2(ifftshift(imageList{index}.fftBeschteImage));
  %  viscircles(cc.Centroid, rad, 'Color', 'b');
    
end

